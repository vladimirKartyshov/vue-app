{"ast":null,"code":"import axios from 'axios';\nimport API_BASE_URL from '';\nexport default {\n  name: 'AppProductFilterer',\n  props: ['priceFrom', 'priceTo', 'categoryId', 'startColor'],\n\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      currentColor: 0,\n      categoriesData: null\n    };\n  },\n\n  computed: {\n    categories() {\n      return this.categoriesData ? this.categoriesData.items : [];\n    }\n\n  },\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n\n    priceTo(value) {\n      this.currentPriceTo = value;\n    },\n\n    categoryId(value) {\n      this.currentCategoryId = value;\n    },\n\n    startColor(value) {\n      this.currentColor = value;\n    }\n\n  },\n  methods: {\n    submit() {\n      this.$emit('update:priceFrom', this.currentPriceFrom);\n      this.$emit('update:priceTo', this.currentPriceTo);\n      this.$emit('update:categoryId', this.currentCategoryId);\n      this.$emit('update:startColor', this.currentColor);\n    },\n\n    reset() {\n      this.$emit('update:priceFrom', 0);\n      this.$emit('update:priceTo', 0);\n      this.$emit('update:categoryId', 0);\n      this.$emit('update:startColor', 0);\n    },\n\n    loadCategories() {\n      axios.get(API_BASE_URL + '/api/productCategories').then(response => this.categoriesData = response.data);\n    }\n\n  },\n\n  created() {\n    this.loadCategories();\n  }\n\n};","map":{"version":3,"mappings":"AAwHA;AACA;AAEA;EACAA,0BADA;EAEAC,2DAFA;;EAIAC;IACA;MACAC,mBADA;MAEAC,iBAFA;MAGAC,oBAHA;MAIAC,eAJA;MAMAC;IANA;EAQA,CAbA;;EAeAC;IACAC;MACA;IACA;;EAHA,CAfA;EAqBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;IACA,CATA;;IAUAC;MACA;IACA;;EAZA,CArBA;EAoCAC;IACAC;MACA;MACA;MACA;MACA;IACA,CANA;;IAOAC;MACA;MACA;MACA;MACA;IACA,CAZA;;IAaAC;MACAC,MACAC,GADA,CACAC,uCADA,EAEAC,IAFA,CAEAC,+CAFA;IAGA;;EAjBA,CApCA;;EAwDAC;IACA;EACA;;AA1DA","names":["name","props","data","currentPriceFrom","currentPriceTo","currentCategoryId","currentColor","categoriesData","computed","categories","watch","priceFrom","priceTo","categoryId","startColor","methods","submit","reset","loadCategories","axios","get","API_BASE_URL","then","response","created"],"sourceRoot":"src/components","sources":["ProductFilter.vue"],"sourcesContent":["<template>\n  <div>\n    <aside class=\"filter\">\n      <h2 class=\"filter__title\">Фильтры</h2>\n\n      <form\n        class=\"filter__form form\"\n        action=\"#\"\n        method=\"get\"\n        @submit.prevent=\"submit\"\n      >\n        <fieldset class=\"form__block\">\n          <legend class=\"form__legend\">Цена</legend>\n          <label class=\"form__label form__label--price\">\n            <input\n              class=\"form__input\"\n              type=\"text\"\n              name=\"min-price\"\n              v-model.number=\"currentPriceFrom\"\n            />\n            <span class=\"form__value\">От</span>\n          </label>\n          <label class=\"form__label form__label--price\">\n            <input\n              class=\"form__input\"\n              type=\"text\"\n              name=\"max-price\"\n              v-model.number=\"currentPriceTo\"\n            />\n            <span class=\"form__value\">До</span>\n          </label>\n        </fieldset>\n\n        <fieldset class=\"form__block\">\n          <legend class=\"form__legend\">Категория</legend>\n          <label class=\"form__label form__label--select\">\n            <select\n              class=\"form__select\"\n              type=\"text\"\n              name=\"category\"\n              v-model.number=\"currentCategoryId\"\n            >\n              <option value=\"0\">Все категории</option>\n              <option\n                :value=\"category.id\"\n                v-for=\"category in categories\"\n                :key=\"category.id\"\n              >\n                {{ category.title }}\n              </option>\n            </select>\n          </label>\n        </fieldset>\n\n        <fieldset class=\"form__block\">\n          <legend class=\"form__legend\">Цвет</legend>\n\n          <ul class=\"colors\">\n            <li\n              class=\"colors__item\"\n              v-for=\"(color, index) in colors\"\n              :key=\"index\"\n            >\n              <label class=\"colors__label\">\n                <input\n                  v-model=\"currentColor\"\n                  class=\"colors__radio sr-only\"\n                  type=\"radio\"\n                  name=\"color\"\n                  :value=\"color\"\n                  :id=\"color\"\n                />\n                <span class=\"colors__value\" :style=\"{backgroundColor: color}\">\n                </span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n\n        <fieldset class=\"form__block\">\n          <legend class=\"form__legend\">Объемб в ГБ</legend>\n          <ul class=\"check-list\">\n            <li\n              class=\"check-list__item\"\n              v-for=\"description in dataSizes\"\n              :key=\"description.id\"\n            >\n              <label class=\"check-list__label\">\n                <input\n                  class=\"check-list__check sr-only\"\n                  type=\"checkbox\"\n                  name=\"volume\"\n                  value=\"8\"\n                  checked=\"\"\n                />\n                <span class=\"check-list__desc\">\n                  {{ description.size }}\n                  <span>{{ description.quantity }}</span>\n                </span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n\n        <button class=\"filter__submit button button--primery\" type=\"submit\">\n          Применить\n        </button>\n        <button\n          class=\"filter__reset button button--second\"\n          type=\"button\"\n          @click.prevent=\"reset\"\n        >\n          Сбросить\n        </button>\n      </form>\n    </aside>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport API_BASE_URL from ''\n\nexport default {\n  name: 'AppProductFilterer',\n  props: ['priceFrom', 'priceTo', 'categoryId', 'startColor'],\n\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      currentColor: 0,\n\n      categoriesData: null,\n    }\n  },\n\n  computed: {\n    categories() {\n      return this.categoriesData ? this.categoriesData.items : []\n    },\n  },\n\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value\n    },\n    priceTo(value) {\n      this.currentPriceTo = value\n    },\n    categoryId(value) {\n      this.currentCategoryId = value\n    },\n    startColor(value) {\n      this.currentColor = value\n    },\n  },\n\n  methods: {\n    submit() {\n      this.$emit('update:priceFrom', this.currentPriceFrom)\n      this.$emit('update:priceTo', this.currentPriceTo)\n      this.$emit('update:categoryId', this.currentCategoryId)\n      this.$emit('update:startColor', this.currentColor)\n    },\n    reset() {\n      this.$emit('update:priceFrom', 0)\n      this.$emit('update:priceTo', 0)\n      this.$emit('update:categoryId', 0)\n      this.$emit('update:startColor', 0)\n    },\n    loadCategories() {\n      axios\n        .get(API_BASE_URL + '/api/productCategories')\n        .then((response) => (this.categoriesData = response.data))\n    },\n  },\n\n  created() {\n    this.loadCategories()\n  },\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}