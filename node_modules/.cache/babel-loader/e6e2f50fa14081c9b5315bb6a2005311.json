{"ast":null,"code":"import numberFormat from '@/helpers/numberFormat';\nimport { mapGetters } from 'vuex';\nimport AppSpinner from '@/components/Spinner.vue';\nimport AppCartItem from '@/components/CartItem.vue';\nimport { API_BASE_URL } from '../config';\nexport default {\n  name: 'AppCartPage',\n  components: {\n    AppCartItem,\n    AppSpinner\n  },\n\n  data() {\n    return {\n      productLoading: false,\n      productLoadingFailed: false\n    };\n  },\n\n  filters: {\n    numberFormat\n  },\n  computed: { ...mapGetters({\n      products: 'cartDetailProducts',\n      totalPrice: 'cartTotalPrice'\n    })\n  },\n  methods: {\n    loadProduct() {\n      this.productLoading = true;\n      this.productLoadingFailed = false;\n      setTimeout(() => {\n        axios.get(API_BASE_URL + '/baskets/' + this.$route.params.id).then(response => this.productData = response.data).catch(() => this.productLoadingFailed = true).then(this.productLoading = false);\n      }, 300);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4DA;AACA;AACA;AACA;AACA;AAGA;EACAA,mBADA;EAEAC;IAAAC;IAAAC;EAAA,CAFA;;EAIAC;IACA;MACAC,qBADA;MAEAC;IAFA;EAIA,CATA;;EAWAC;IAAAC;EAAA,CAXA;EAaAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CAbA;EAoBAC;IACAC;MACA;MACA;MACAC;QACAC,MACAC,GADA,CACAC,kDADA,EAEAC,IAFA,CAEAC,4CAFA,EAGAC,KAHA,CAGA,sCAHA,EAIAF,IAJA,CAIA,2BAJA;MAKA,CANA,EAMA,GANA;IAOA;;EAXA;AApBA","names":["name","components","AppCartItem","AppSpinner","data","productLoading","productLoadingFailed","filters","numberFormat","computed","products","totalPrice","methods","loadProduct","setTimeout","axios","get","API_BASE_URL","then","response","catch"],"sourceRoot":"src/pages","sources":["CartPage.vue"],"sourcesContent":["<template>\n  <div>\n    <main class=\"content container\">\n      <main class=\"content container\" v-if=\"productLoading\">\n        <app-spinner />\n      </main>\n      <div class=\"content__top\">\n        <ul class=\"breadcrumbs\">\n          <li class=\"breadcrumbs__item\">\n            <router-link\n              tag=\"button\"\n              class=\"breadcrumbs__link\"\n              :to=\"{name: 'main'}\"\n            >\n              Каталог\n            </router-link>\n          </li>\n          <li class=\"breadcrumbs__item\">\n            <a class=\"breadcrumbs__link\"> Корзина </a>\n          </li>\n        </ul>\n\n        <h1 class=\"content__title\">Корзина</h1>\n        <span class=\"content__info\">\n          Кол-во товаров\n          {{ $store.state.cartProducts.length }}\n        </span>\n      </div>\n\n      <section class=\"cart\">\n        <form class=\"cart__form form\" action=\"#\" method=\"POST\">\n          <div class=\"cart__field\">\n            <ul class=\"cart__list\">\n              <app-cart-item\n                :item=\"item\"\n                v-for=\"item in products\"\n                :key=\"item.productId\"\n              />\n            </ul>\n          </div>\n\n          <div class=\"cart__block\">\n            <p class=\"cart__desc\">\n              Мы&nbsp;посчитаем стоимость доставки на&nbsp;следующем этапе\n            </p>\n            <p class=\"cart__price\">\n              Итого: <span>{{ totalPrice | numberFormat }}</span>\n            </p>\n\n            <button class=\"cart__button button button--primery\" type=\"submit\">\n              Оформить заказ\n            </button>\n          </div>\n        </form>\n      </section>\n    </main>\n  </div>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat'\nimport {mapGetters} from 'vuex'\nimport AppSpinner from '@/components/Spinner.vue'\nimport AppCartItem from '@/components/CartItem.vue'\nimport {API_BASE_URL} from '../config'\n\n\nexport default {\n  name: 'AppCartPage',\n  components: {AppCartItem, AppSpinner},\n\n  data() {\n    return {\n      productLoading: false,\n      productLoadingFailed: false,\n    }\n  },\n\n  filters: {numberFormat},\n\n  computed: {\n    ...mapGetters({\n      products: 'cartDetailProducts',\n      totalPrice: 'cartTotalPrice',\n    }),\n  },\n\n  methods: {\n    loadProduct() {\n      this.productLoading = true\n      this.productLoadingFailed = false\n      setTimeout(() => {\n        axios\n          .get(API_BASE_URL + '/baskets/' + this.$route.params.id)\n          .then((response) => (this.productData = response.data))\n          .catch(() => (this.productLoadingFailed = true))\n          .then((this.productLoading = false))\n      }, 300)\n    },\n  },\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}