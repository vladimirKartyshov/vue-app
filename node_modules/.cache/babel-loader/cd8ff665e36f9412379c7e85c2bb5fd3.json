{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cartProducts: [],\n    cartProductsData: [],\n    productLoading: true,\n    userAccessKey: null,\n    orderInfo: null\n  },\n  mutations: {\n    updateOrderInfo(state, orderInfo) {\n      const jsonData = state.orderInfo = orderInfo;\n    },\n\n    resetCart(state) {\n      state.cartProducts = [];\n      state.cartProductsData = [];\n    },\n\n    // addProductToCart(state, {productId, amount}) {\n    //   const item = state.cartProducts.find(\n    //     (item) => item.productId === productId\n    //   )\n    //   if (item) {\n    //     item.amount += amount\n    //   } else {\n    //     state.cartProducts.push({\n    //       productId,\n    //       amount,\n    //     })\n    //   }\n    // },\n    updateCartProductAmount(state, {\n      productId,\n      amount\n    }) {\n      const item = state.cartProducts.find(item => item.productId === productId);\n\n      if (item) {\n        item.amount = amount;\n      }\n    },\n\n    deletCartProduct(state, productId) {\n      state.cartProducts = state.cartProducts.filter(item => item.productId !== productId);\n    },\n\n    updateUserAccessKey(state, accessKey) {\n      state.userAccessKey = accessKey;\n    },\n\n    updateCartProductsData(state, items) {\n      state.cartProductsData = items;\n    },\n\n    syncCartProducts(state) {\n      state.cartProducts = state.cartProductsData.map(item => {\n        return {\n          productId: item.product.id,\n          amount: item.quantity\n        };\n      });\n    },\n\n    loadCartStatus(state, value) {\n      state.productLoading = value;\n    }\n\n  },\n  getters: {\n    cartDetailProducts(state) {\n      return state.cartProducts.map(item => {\n        const product = state.cartProductsData.find(p => p.product.id === item.productId).product;\n        return { ...item,\n          product: { ...product,\n            image: product.image.file.url\n          }\n        };\n      });\n    },\n\n    cartTotalPrice(state, getters) {\n      return getters.cartDetailProducts.reduce((acc, item) => item.product.price * item.amount + acc, 0);\n    }\n\n  },\n  actions: {\n    loadOrderInfo(context, orderId) {\n      return axios.get(API_BASE_URL + '/orders' / +orderId, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      }).then(response => {\n        context.commit('updateOrderInfo', response.data);\n      });\n    },\n\n    loadCart(context) {\n      return new Promise(resolve => setTimeout(resolve, 500)).then(() => {\n        return axios.get(API_BASE_URL + '/baskets', {\n          params: {\n            userAccessKey: context.state.userAccessKey\n          }\n        }).then(response => {\n          if (!context.state.userAccessKey) {\n            localStorage.setItem('userAccessKey', response.data.user.accessKey);\n            context.commit('updateUserAccessKey', response.data.user.accessKey);\n          }\n\n          context.commit('updateCartProductsData', response.data.items);\n          context.commit('syncCartProducts');\n          context.commit('loadCartStatus', false);\n        });\n      });\n    },\n\n    addProductToCart(context, {\n      productId,\n      amount\n    }) {\n      return new Promise(resolve => setTimeout(resolve, 2000)).then(() => {\n        return axios.post(API_BASE_URL + '/baskets/products', {\n          productId: productId,\n          quantity: amount\n        }, {\n          params: {\n            userAccessKey: context.state.userAccessKey\n          }\n        }).then(response => {\n          context.commit('updateCartProductsData', response.data.items);\n          context.commit('syncCartProducts');\n        });\n      });\n    },\n\n    updateCartProductAmount(context, {\n      productId,\n      amount\n    }) {\n      context.commit('updateCartProductAmount', {\n        productId,\n        amount\n      });\n\n      if (amount < 1) {\n        return;\n      }\n\n      return axios.put(API_BASE_URL + '/baskets/products', {\n        productId: productId,\n        quantity: amount\n      }, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      }).then(response => {\n        context.commit('updateCartProductsData', response.data.items);\n      }).catch(() => {\n        context.commit('syncCartProducts');\n      });\n    },\n\n    deletCartProduct(context, productId) {\n      context.commit('updateCartProductAmount', productId);\n      return axios.delete(API_BASE_URL + '/baskets/products', {\n        data: {\n          productId\n        },\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      }).then(response => {\n        context.commit('updateCartProductsData', response.data.items);\n        context.commit('syncCartProducts');\n      });\n    }\n\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","API_BASE_URL","use","Store","state","cartProducts","cartProductsData","productLoading","userAccessKey","orderInfo","mutations","updateOrderInfo","jsonData","resetCart","updateCartProductAmount","productId","amount","item","find","deletCartProduct","filter","updateUserAccessKey","accessKey","updateCartProductsData","items","syncCartProducts","map","product","id","quantity","loadCartStatus","value","getters","cartDetailProducts","p","image","file","url","cartTotalPrice","reduce","acc","price","actions","loadOrderInfo","context","orderId","get","params","then","response","commit","data","loadCart","Promise","resolve","setTimeout","localStorage","setItem","user","addProductToCart","post","put","catch","delete"],"sources":["/home/Kratos/Vs Code/vue-ishop/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport {API_BASE_URL} from '../config'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    cartProducts: [],\n    cartProductsData: [],\n\n    productLoading: true,\n\n    userAccessKey: null,\n\n    orderInfo: null,\n  },\n\n  mutations: {\n    updateOrderInfo(state, orderInfo) {\n      const jsonData = \n      state.orderInfo = orderInfo\n    },\n\n    resetCart(state) {\n      state.cartProducts = []\n      state.cartProductsData = []\n    },\n    // addProductToCart(state, {productId, amount}) {\n    //   const item = state.cartProducts.find(\n    //     (item) => item.productId === productId\n    //   )\n    //   if (item) {\n    //     item.amount += amount\n    //   } else {\n    //     state.cartProducts.push({\n    //       productId,\n    //       amount,\n    //     })\n    //   }\n    // },\n    updateCartProductAmount(state, {productId, amount}) {\n      const item = state.cartProducts.find(\n        (item) => item.productId === productId\n      )\n      if (item) {\n        item.amount = amount\n      }\n    },\n    deletCartProduct(state, productId) {\n      state.cartProducts = state.cartProducts.filter(\n        (item) => item.productId !== productId\n      )\n    },\n    updateUserAccessKey(state, accessKey) {\n      state.userAccessKey = accessKey\n    },\n    updateCartProductsData(state, items) {\n      state.cartProductsData = items\n    },\n    syncCartProducts(state) {\n      state.cartProducts = state.cartProductsData.map((item) => {\n        return {\n          productId: item.product.id,\n          amount: item.quantity,\n        }\n      })\n    },\n    loadCartStatus(state, value) {\n      state.productLoading = value\n    },\n  },\n\n  getters: {\n    cartDetailProducts(state) {\n      return state.cartProducts.map((item) => {\n        const product = state.cartProductsData.find(\n          (p) => p.product.id === item.productId\n        ).product\n\n        return {\n          ...item,\n          product: {\n            ...product,\n            image: product.image.file.url,\n          },\n        }\n      })\n    },\n    cartTotalPrice(state, getters) {\n      return getters.cartDetailProducts.reduce(\n        (acc, item) => item.product.price * item.amount + acc,\n        0\n      )\n    },\n  },\n\n  actions: {\n    loadOrderInfo(context, orderId) {\n        return axios\n          .get(API_BASE_URL + '/orders'/ + orderId, {\n            params: {\n              userAccessKey: context.state.userAccessKey,\n            },\n          })\n          .then(response => {\n            context.commit('updateOrderInfo', response.data)\n          })\n    },\n\n    loadCart(context) {\n      return new Promise((resolve) => setTimeout(resolve, 500)).then(() => {\n        return axios\n          .get(API_BASE_URL + '/baskets', {\n            params: {\n              userAccessKey: context.state.userAccessKey,\n            },\n          })\n          .then((response) => {\n            if (!context.state.userAccessKey) {\n              localStorage.setItem(\n                'userAccessKey',\n                response.data.user.accessKey\n              )\n              context.commit(\n                'updateUserAccessKey',\n                response.data.user.accessKey\n              )\n            }\n\n            context.commit('updateCartProductsData', response.data.items)\n            context.commit('syncCartProducts')\n            context.commit('loadCartStatus', false)\n          })\n      })\n    },\n    addProductToCart(context, {productId, amount}) {\n      return new Promise((resolve) => setTimeout(resolve, 2000)).then(() => {\n        return axios\n          .post(\n            API_BASE_URL + '/baskets/products',\n            {\n              productId: productId,\n              quantity: amount,\n            },\n            {\n              params: {\n                userAccessKey: context.state.userAccessKey,\n              },\n            }\n          )\n          .then((response) => {\n            context.commit('updateCartProductsData', response.data.items)\n            context.commit('syncCartProducts')\n          })\n      })\n    },\n    updateCartProductAmount(context, {productId, amount}) {\n      context.commit('updateCartProductAmount', {productId, amount})\n\n      if (amount < 1) {\n        return\n      }\n\n      return axios\n        .put(\n          API_BASE_URL + '/baskets/products',\n          {\n            productId: productId,\n            quantity: amount,\n          },\n          {\n            params: {\n              userAccessKey: context.state.userAccessKey,\n            },\n          }\n        )\n        .then((response) => {\n          context.commit('updateCartProductsData', response.data.items)\n        })\n        .catch(() => {\n          context.commit('syncCartProducts')\n        })\n    },\n    deletCartProduct(context, productId) {\n      context.commit('updateCartProductAmount', productId)\n\n      return axios\n        .delete(API_BASE_URL + '/baskets/products', {\n          data: {productId},\n          params: {\n            userAccessKey: context.state.userAccessKey,\n          },\n        })\n        .then((response) => {\n          context.commit('updateCartProductsData', response.data.items)\n          context.commit('syncCartProducts')\n        })\n    },\n  },\n})\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,YAAY,EAAE,EADT;IAELC,gBAAgB,EAAE,EAFb;IAILC,cAAc,EAAE,IAJX;IAMLC,aAAa,EAAE,IANV;IAQLC,SAAS,EAAE;EARN,CADqB;EAY5BC,SAAS,EAAE;IACTC,eAAe,CAACP,KAAD,EAAQK,SAAR,EAAmB;MAChC,MAAMG,QAAQ,GACdR,KAAK,CAACK,SAAN,GAAkBA,SADlB;IAED,CAJQ;;IAMTI,SAAS,CAACT,KAAD,EAAQ;MACfA,KAAK,CAACC,YAAN,GAAqB,EAArB;MACAD,KAAK,CAACE,gBAAN,GAAyB,EAAzB;IACD,CATQ;;IAUT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAQ,uBAAuB,CAACV,KAAD,EAAQ;MAACW,SAAD;MAAYC;IAAZ,CAAR,EAA6B;MAClD,MAAMC,IAAI,GAAGb,KAAK,CAACC,YAAN,CAAmBa,IAAnB,CACVD,IAAD,IAAUA,IAAI,CAACF,SAAL,KAAmBA,SADlB,CAAb;;MAGA,IAAIE,IAAJ,EAAU;QACRA,IAAI,CAACD,MAAL,GAAcA,MAAd;MACD;IACF,CA9BQ;;IA+BTG,gBAAgB,CAACf,KAAD,EAAQW,SAAR,EAAmB;MACjCX,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACC,YAAN,CAAmBe,MAAnB,CAClBH,IAAD,IAAUA,IAAI,CAACF,SAAL,KAAmBA,SADV,CAArB;IAGD,CAnCQ;;IAoCTM,mBAAmB,CAACjB,KAAD,EAAQkB,SAAR,EAAmB;MACpClB,KAAK,CAACI,aAAN,GAAsBc,SAAtB;IACD,CAtCQ;;IAuCTC,sBAAsB,CAACnB,KAAD,EAAQoB,KAAR,EAAe;MACnCpB,KAAK,CAACE,gBAAN,GAAyBkB,KAAzB;IACD,CAzCQ;;IA0CTC,gBAAgB,CAACrB,KAAD,EAAQ;MACtBA,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACE,gBAAN,CAAuBoB,GAAvB,CAA4BT,IAAD,IAAU;QACxD,OAAO;UACLF,SAAS,EAAEE,IAAI,CAACU,OAAL,CAAaC,EADnB;UAELZ,MAAM,EAAEC,IAAI,CAACY;QAFR,CAAP;MAID,CALoB,CAArB;IAMD,CAjDQ;;IAkDTC,cAAc,CAAC1B,KAAD,EAAQ2B,KAAR,EAAe;MAC3B3B,KAAK,CAACG,cAAN,GAAuBwB,KAAvB;IACD;;EApDQ,CAZiB;EAmE5BC,OAAO,EAAE;IACPC,kBAAkB,CAAC7B,KAAD,EAAQ;MACxB,OAAOA,KAAK,CAACC,YAAN,CAAmBqB,GAAnB,CAAwBT,IAAD,IAAU;QACtC,MAAMU,OAAO,GAAGvB,KAAK,CAACE,gBAAN,CAAuBY,IAAvB,CACbgB,CAAD,IAAOA,CAAC,CAACP,OAAF,CAAUC,EAAV,KAAiBX,IAAI,CAACF,SADf,EAEdY,OAFF;QAIA,OAAO,EACL,GAAGV,IADE;UAELU,OAAO,EAAE,EACP,GAAGA,OADI;YAEPQ,KAAK,EAAER,OAAO,CAACQ,KAAR,CAAcC,IAAd,CAAmBC;UAFnB;QAFJ,CAAP;MAOD,CAZM,CAAP;IAaD,CAfM;;IAgBPC,cAAc,CAAClC,KAAD,EAAQ4B,OAAR,EAAiB;MAC7B,OAAOA,OAAO,CAACC,kBAAR,CAA2BM,MAA3B,CACL,CAACC,GAAD,EAAMvB,IAAN,KAAeA,IAAI,CAACU,OAAL,CAAac,KAAb,GAAqBxB,IAAI,CAACD,MAA1B,GAAmCwB,GAD7C,EAEL,CAFK,CAAP;IAID;;EArBM,CAnEmB;EA2F5BE,OAAO,EAAE;IACPC,aAAa,CAACC,OAAD,EAAUC,OAAV,EAAmB;MAC5B,OAAO7C,KAAK,CACT8C,GADI,CACA7C,YAAY,GAAG,YAAW,CAAE4C,OAD5B,EACqC;QACxCE,MAAM,EAAE;UACNvC,aAAa,EAAEoC,OAAO,CAACxC,KAAR,CAAcI;QADvB;MADgC,CADrC,EAMJwC,IANI,CAMCC,QAAQ,IAAI;QAChBL,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAkCD,QAAQ,CAACE,IAA3C;MACD,CARI,CAAP;IASH,CAXM;;IAaPC,QAAQ,CAACR,OAAD,EAAU;MAChB,OAAO,IAAIS,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAnC,EAAmDN,IAAnD,CAAwD,MAAM;QACnE,OAAOhD,KAAK,CACT8C,GADI,CACA7C,YAAY,GAAG,UADf,EAC2B;UAC9B8C,MAAM,EAAE;YACNvC,aAAa,EAAEoC,OAAO,CAACxC,KAAR,CAAcI;UADvB;QADsB,CAD3B,EAMJwC,IANI,CAMEC,QAAD,IAAc;UAClB,IAAI,CAACL,OAAO,CAACxC,KAAR,CAAcI,aAAnB,EAAkC;YAChCgD,YAAY,CAACC,OAAb,CACE,eADF,EAEER,QAAQ,CAACE,IAAT,CAAcO,IAAd,CAAmBpC,SAFrB;YAIAsB,OAAO,CAACM,MAAR,CACE,qBADF,EAEED,QAAQ,CAACE,IAAT,CAAcO,IAAd,CAAmBpC,SAFrB;UAID;;UAEDsB,OAAO,CAACM,MAAR,CAAe,wBAAf,EAAyCD,QAAQ,CAACE,IAAT,CAAc3B,KAAvD;UACAoB,OAAO,CAACM,MAAR,CAAe,kBAAf;UACAN,OAAO,CAACM,MAAR,CAAe,gBAAf,EAAiC,KAAjC;QACD,CArBI,CAAP;MAsBD,CAvBM,CAAP;IAwBD,CAtCM;;IAuCPS,gBAAgB,CAACf,OAAD,EAAU;MAAC7B,SAAD;MAAYC;IAAZ,CAAV,EAA+B;MAC7C,OAAO,IAAIqC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,EAAoDN,IAApD,CAAyD,MAAM;QACpE,OAAOhD,KAAK,CACT4D,IADI,CAEH3D,YAAY,GAAG,mBAFZ,EAGH;UACEc,SAAS,EAAEA,SADb;UAEEc,QAAQ,EAAEb;QAFZ,CAHG,EAOH;UACE+B,MAAM,EAAE;YACNvC,aAAa,EAAEoC,OAAO,CAACxC,KAAR,CAAcI;UADvB;QADV,CAPG,EAaJwC,IAbI,CAaEC,QAAD,IAAc;UAClBL,OAAO,CAACM,MAAR,CAAe,wBAAf,EAAyCD,QAAQ,CAACE,IAAT,CAAc3B,KAAvD;UACAoB,OAAO,CAACM,MAAR,CAAe,kBAAf;QACD,CAhBI,CAAP;MAiBD,CAlBM,CAAP;IAmBD,CA3DM;;IA4DPpC,uBAAuB,CAAC8B,OAAD,EAAU;MAAC7B,SAAD;MAAYC;IAAZ,CAAV,EAA+B;MACpD4B,OAAO,CAACM,MAAR,CAAe,yBAAf,EAA0C;QAACnC,SAAD;QAAYC;MAAZ,CAA1C;;MAEA,IAAIA,MAAM,GAAG,CAAb,EAAgB;QACd;MACD;;MAED,OAAOhB,KAAK,CACT6D,GADI,CAEH5D,YAAY,GAAG,mBAFZ,EAGH;QACEc,SAAS,EAAEA,SADb;QAEEc,QAAQ,EAAEb;MAFZ,CAHG,EAOH;QACE+B,MAAM,EAAE;UACNvC,aAAa,EAAEoC,OAAO,CAACxC,KAAR,CAAcI;QADvB;MADV,CAPG,EAaJwC,IAbI,CAaEC,QAAD,IAAc;QAClBL,OAAO,CAACM,MAAR,CAAe,wBAAf,EAAyCD,QAAQ,CAACE,IAAT,CAAc3B,KAAvD;MACD,CAfI,EAgBJsC,KAhBI,CAgBE,MAAM;QACXlB,OAAO,CAACM,MAAR,CAAe,kBAAf;MACD,CAlBI,CAAP;IAmBD,CAtFM;;IAuFP/B,gBAAgB,CAACyB,OAAD,EAAU7B,SAAV,EAAqB;MACnC6B,OAAO,CAACM,MAAR,CAAe,yBAAf,EAA0CnC,SAA1C;MAEA,OAAOf,KAAK,CACT+D,MADI,CACG9D,YAAY,GAAG,mBADlB,EACuC;QAC1CkD,IAAI,EAAE;UAACpC;QAAD,CADoC;QAE1CgC,MAAM,EAAE;UACNvC,aAAa,EAAEoC,OAAO,CAACxC,KAAR,CAAcI;QADvB;MAFkC,CADvC,EAOJwC,IAPI,CAOEC,QAAD,IAAc;QAClBL,OAAO,CAACM,MAAR,CAAe,wBAAf,EAAyCD,QAAQ,CAACE,IAAT,CAAc3B,KAAvD;QACAoB,OAAO,CAACM,MAAR,CAAe,kBAAf;MACD,CAVI,CAAP;IAWD;;EArGM;AA3FmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}