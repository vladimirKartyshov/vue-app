{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport products from '@/data/products';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cartProducts: [{\n      productId: 1,\n      amount: 2\n    }]\n  },\n  userAccessKey: null,\n  cartProductsData: [],\n  mutations: {\n    addProductToCart(state, {\n      productId,\n      amount\n    }) {\n      const item = state.cartProducts.find(item => item.productId === productId);\n\n      if (item) {\n        item.amount += amount;\n      } else {\n        state.cartProducts.push({\n          productId,\n          amount\n        });\n      }\n    },\n\n    updateCartProductAmount(state, {\n      productId,\n      amount\n    }) {\n      const item = state.cartProducts.find(item => item.productId === productId);\n\n      if (item) {\n        item.amount = amount;\n      }\n    },\n\n    deletCartProduct(state, productId) {\n      state.cartProducts = state.cartProducts.filter(item => item.productId !== productId);\n    },\n\n    updateUserAccessKey(state, accessKey) {\n      state.userAccessKey = accessKey;\n    },\n\n    updateCartProductsData(state, itmes) {\n      state.cartProductsData = itmes;\n    },\n\n    syncCartProducts(state) {\n      state.cartProducts = state.cartProductsData.map(item => {\n        return {\n          productId: item.product.id,\n          amount: item.quantity\n        };\n      });\n    }\n\n  },\n  getters: {\n    cartDetailProducts(state) {\n      return state.cartProducts.map(item => {\n        return { ...item,\n          product: products.find(p => p.id === item.productId)\n        };\n      });\n    },\n\n    cartTotalPrice(state, getters) {\n      return getters.cartDetailProducts.reduce((acc, item) => item.product.price * item.amount + acc, 0);\n    }\n\n  },\n  actions: {\n    loadCart(context) {\n      axios.get(API_BASE_URL + '/baskets', {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      }).then(response => {\n        if (!context.state.userAccessKey) {\n          localStorage.setItem('userAccessKey', response.data.user.accessKey);\n          context.commit('updateUserAccessKey', response.data.user.accessKey);\n        }\n\n        context.commit('updateCartProductsData', response.data.itmes);\n      });\n    }\n\n  }\n});","map":{"version":3,"names":["Vue","Vuex","products","axios","API_BASE_URL","use","Store","state","cartProducts","productId","amount","userAccessKey","cartProductsData","mutations","addProductToCart","item","find","push","updateCartProductAmount","deletCartProduct","filter","updateUserAccessKey","accessKey","updateCartProductsData","itmes","syncCartProducts","map","product","id","quantity","getters","cartDetailProducts","p","cartTotalPrice","reduce","acc","price","actions","loadCart","context","get","params","then","response","localStorage","setItem","data","user","commit"],"sources":["/home/Kratos/Vs Code/vue-ishop/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport products from '@/data/products'\nimport axios from 'axios'\nimport {API_BASE_URL} from '../config'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    cartProducts: [{productId: 1, amount: 2}],\n  },\n\n  userAccessKey: null,\n\n  cartProductsData: [],\n\n  mutations: {\n    addProductToCart(state, {productId, amount}) {\n      const item = state.cartProducts.find(\n        (item) => item.productId === productId\n      )\n      if (item) {\n        item.amount += amount\n      } else {\n        state.cartProducts.push({\n          productId,\n          amount,\n        })\n      }\n    },\n    updateCartProductAmount(state, {productId, amount}) {\n      const item = state.cartProducts.find(\n        (item) => item.productId === productId\n      )\n      if (item) {\n        item.amount = amount\n      }\n    },\n    deletCartProduct(state, productId) {\n      state.cartProducts = state.cartProducts.filter(\n        (item) => item.productId !== productId\n      )\n    },\n    updateUserAccessKey(state, accessKey) {\n      state.userAccessKey = accessKey\n    },\n    updateCartProductsData(state, itmes) {\n      state.cartProductsData = itmes\n    },\n    syncCartProducts(state) {\n      state.cartProducts = state.cartProductsData.map(item => {\n        return {\n          productId: item.product.id,\n          amount: item.quantity,\n        }\n      })\n    }\n\n  },\n\n\n  getters: {\n    cartDetailProducts(state) {\n      return state.cartProducts.map((item) => {\n        return {\n          ...item,\n          product: products.find((p) => p.id === item.productId),\n        }\n      })\n    },\n    cartTotalPrice(state, getters) {\n      return getters.cartDetailProducts.reduce(\n        (acc, item) => item.product.price * item.amount + acc,\n        0\n      )\n    },\n  },\n\n  actions: {\n    loadCart(context) {\n      axios\n        .get(API_BASE_URL + '/baskets', {\n          params: {\n            userAccessKey: context.state.userAccessKey,\n          },\n        })\n        .then((response) => {\n          if (!context.state.userAccessKey) {\n            localStorage.setItem('userAccessKey', response.data.user.accessKey)\n            context.commit('updateUserAccessKey', response.data.user.accessKey)\n          }\n\n          context.commit('updateCartProductsData', response.data.itmes)\n        })\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}