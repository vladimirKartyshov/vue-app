{"ast":null,"code":"import numberFormat from '@/helpers/numberFormat';\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'AppCartItem',\n  filters: {\n    numberFormat\n  },\n  props: ['item'],\n  computed: {\n    amount: {\n      get() {\n        return this.item.amount;\n      },\n\n      set(value) {\n        this.$store.dispatch('updateCartProductAmount', {\n          productId: this.item.productId,\n          amount: value\n        });\n      }\n\n    }\n  },\n  methods: { ...mapActions({\n      deleteProduct: 'deletCartProduct'\n    })\n  }\n};","map":{"version":3,"mappings":"AAoDA;AACA;AAEA;EACAA,mBADA;EAGAC;IAAAC;EAAA,CAHA;EAKAC,eALA;EAOAC;IACAC;MACAC;QACA;MACA,CAHA;;MAIAC;QACA;UACAC,8BADA;UAEAH;QAFA;MAIA;;IATA;EADA,CAPA;EAqBAI,WACA;MAAAC;IAAA;EADA;AArBA","names":["name","filters","numberFormat","props","computed","amount","get","set","productId","methods","deleteProduct"],"sourceRoot":"src/components","sources":["CartItem.vue"],"sourcesContent":["<template>\n  <div>\n    <li class=\"cart__item product\">\n      <div class=\"product__pic\">\n        <img\n          :src=\"item.product.image\"\n          width=\"120\"\n          height=\"120\"\n          alt=\"item.product.title\"\n        />\n      </div>\n      <h3 class=\"product__title\">\n        {{ item.product.title }}\n      </h3>\n\n      <span class=\"product__code\"> {{ item.productId }} </span>\n\n      <div class=\"product__counter form__counter\">\n        <button type=\"button\" aria-label=\"Убрать один товар\">\n          <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n            <use xlink:href=\"#icon-minus\"></use>\n          </svg>\n        </button>\n\n        <input type=\"text\" v-model.number=\"amount\" name=\"count\" />\n\n        <button type=\"button\" aria-label=\"Добавить один товар\">\n          <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n            <use xlink:href=\"#icon-plus\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <b class=\"product__price\">\n        {{ (item.amount * item.product.price) | numberFormat }}\n      </b>\n\n      <button\n        class=\"product__del button-del\"\n        type=\"button\"\n        aria-label=\"Удалить товар из корзины\"\n        @.prevent=\"deleteProduct(item.productId)\"\n      >\n        <svg width=\"20\" height=\"20\" fill=\"currentColor\">\n          <use xlink:href=\"#icon-close\"></use>\n        </svg>\n      </button>\n    </li>\n  </div>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat'\nimport {mapActions} from 'vuex'\n\nexport default {\n  name: 'AppCartItem',\n\n  filters: {numberFormat},\n\n  props: ['item'],\n\n  computed: {\n    amount: {\n      get() {\n        return this.item.amount\n      },\n      set(value) {\n        this.$store.dispatch('updateCartProductAmount', {\n          productId: this.item.productId,\n          amount: value,\n        })\n      },\n    },\n  },\n\n  methods: {\n    ...mapActions({deleteProduct: 'deletCartProduct'}),\n  },\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}